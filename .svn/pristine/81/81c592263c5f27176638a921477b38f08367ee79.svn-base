package com.mintfish.ringpet.page;

import java.net.URLEncoder;

import org.json.JSONException;
import org.json.JSONObject;

import com.mintfish.ringpet.R;
import com.mintfish.ringpet.message.MessageConverstationFragment;
import com.mintfish.ringpet.util.HttpGetRequest;

import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

public class SupportFragment extends Fragment {
	private String id = "";
	private String pw = "";
	Handler mHandler = new Handler();
	
	@Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
    {
		Bundle b = getActivity().getIntent().getExtras();
		if(b != null)
		{
	        id = b.getString("id");
	        pw = b.getString("pw");
		}
        return inflater.inflate(R.layout.activity_support, null);
    }
     
    @Override
    public void onActivityCreated(Bundle savedInstanceState)
    {
        super.onActivityCreated(savedInstanceState);
        final ImageView iv = (ImageView)this.getActivity().findViewById(R.id.title_bar);
		final TextView tv = (TextView)this.getActivity().findViewById(R.id.title_bar_img);
		iv.setVisibility(View.INVISIBLE);
		tv.setVisibility(View.VISIBLE);
		tv.setText(R.string.title_support);
		
		LinearLayout support_send = (LinearLayout) this.getActivity().findViewById(R.id.support_btn);
		LinearLayout support_call = (LinearLayout) this.getActivity().findViewById(R.id.support_call);
		support_call.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent callIntent = new Intent(Intent.ACTION_CALL);
    	        callIntent.setData(Uri.parse("tel:01085271252"));
    	        startActivity(callIntent);
			}
        });
		
		support_send.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				sendFeedback();
			}
        });	
    }
    
    public void sendFeedback()
    {
    	if(id == "")
    	{
    		showErrorAlert("상담은 로그인하셔야 사용 가능합니다.");
    		return;
    	}
    	final EditText support_edit = (EditText) this.getActivity().findViewById(R.id.support_txt);
    	if(support_edit.getText().toString().equals(""))
    	{
    		showErrorAlert("상담하실 내용을 입력하여 주십시오.");
    	}else{
    		final ProgressDialog dialog = ProgressDialog.show(this.getActivity(), "", "확인중입니다. 잠시만 기다려주십시오.", true);
 		   	new Thread() {
 			   public void run() {
 	        	   	try
 		           	{
 		           		String path = "http://api.ringpet.com/api/addConsume?id="+id+"&pw="+pw+"&content="+URLEncoder.encode(support_edit.getText().toString());
 		           		HttpGetRequest hgr = new HttpGetRequest();
 		                String url = hgr.getHTML(path);
 		                try {
 		                    JSONObject response = new JSONObject(url);
 		                    JSONObject channel = response.getJSONObject("channel");
 		                    String result_str = channel.getString("result").toString();
 		                    
 		
 		                } catch (JSONException e) {
 		                    Log.d("jsonexception", e.toString());
 		                }
 		           	}catch(Exception e){
 		        		e.printStackTrace();
 		        	}
 		        		
 		        	mHandler.post(new Runnable() {
 		        		public void run() {
 		        			dialog.dismiss();
 		        			dialog.hide();
 		        			showErrorAlert("소중한 의견 감사합니다.\n확인후 고객님께 연락드리겠습니다.");
 		        			getFragmentManager().popBackStack();
 		        		}
 		        	});
 	        }
 	    }.start();	
    	}
    }
    
    private void showErrorAlert(String message)
	{
	   AlertDialog.Builder builder = new AlertDialog.Builder(this.getActivity());
	   builder.setTitle("확인");
	   builder.setMessage(message);
	   builder.setNeutralButton("확인", new DialogInterface.OnClickListener() {
           public void onClick(DialogInterface dialog, int whichButton) {                                        
          }
       });
	   builder.show();
	}
}
