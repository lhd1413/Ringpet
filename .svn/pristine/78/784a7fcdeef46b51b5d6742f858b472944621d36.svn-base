package com.mintfish.ringpet.bookmark;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.koushikdutta.urlimageviewhelper.UrlImageViewHelper;
import com.mintfish.ringpet.R;
import com.mintfish.ringpet.model.ListModel;
import com.mintfish.ringpet.sitter.SitterInformationFragment;
import com.mintfish.ringpet.util.HttpGetRequest;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.preference.PreferenceManager;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;

public class BookmarkListFragment extends Fragment {
	
	private String id = "";
	private String pw = "";
	
	Handler mHandler = new Handler();
	private ProgressDialog dialog;
	
	private ArrayList<ListModel> lists;
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
	{
		Bundle b = getActivity().getIntent().getExtras();
		if(b == null)
		{
			SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(getActivity().getBaseContext());
	        String saved_id = pref.getString("id", null);
	        String saved_pw = pref.getString("pw", null);	        
	        if(saved_id != null)
	        {
	        	id = saved_id;
	        	pw = saved_pw;
	        }
	        
		}else{
			id = b.getString("id");
			pw = b.getString("pw");
			
			if(id == null)
			{
				SharedPreferences pref = PreferenceManager.getDefaultSharedPreferences(getActivity().getBaseContext());
		        String saved_id = pref.getString("id", null);
		        String saved_pw = pref.getString("pw", null);	        
		        if(saved_id != null)
		        {
		        	id = saved_id;
		        	pw = saved_pw;
		        }
			}
		}
		return inflater.inflate(R.layout.activity_bookmark, null);		
	}
	
	@Override
    public void onActivityCreated(Bundle savedInstanceState)
    {
    	
        super.onActivityCreated(savedInstanceState);
        final ImageView iv = (ImageView)this.getActivity().findViewById(R.id.title_bar);
		final TextView tv = (TextView)this.getActivity().findViewById(R.id.title_bar_img);
		iv.setVisibility(View.INVISIBLE);
		tv.setVisibility(View.VISIBLE);
		tv.setText(R.string.title_bookmark);
		
		loadData();
    }
    
    private void loadData()
    {
    	dialog = ProgressDialog.show(getActivity(), "", "불러오는 중입니다. 잠시만 기다려주십시오.", true);
    	lists = new ArrayList<ListModel>();
    	new Thread() {
    		public void run() {
         	   	try
 	           	{
         	   		String path = "http://api.ringpet.com/api/FavoriteList?id="+id+"&pw="+pw;
         	   		HttpGetRequest hgr = new HttpGetRequest();
	                String url = hgr.getHTML(path);
	                try {
	                    JSONObject response = new JSONObject(url);
	                    JSONObject channel = response.getJSONObject("channel");
	                    String result_str = channel.getString("result").toString();
	                    //des_str = channel.getString("description").toString();
	                    JSONArray array = channel.getJSONArray("item");
	                    int length = array.length();
	                    for(int i = 0; i < length; i++)
	                    {
	                    	ListModel lModel = new ListModel();
	                    	JSONObject item = array.getJSONObject(i);
	                    	lModel.setAvg(Float.parseFloat(item.getString("avg").toString()));
	                    	lModel.setAvgCnt(item.getInt("review_cnt"));
	                    	lModel.setBadge1(item.getInt("badge1"));
	                    	lModel.setMoney(item.getInt("money"));
	                    	lModel.setBadge2(item.getInt("badge2"));
	                    	lModel.setBadge3(item.getInt("badge3"));
	                    	lModel.setMapx(item.getString("mapx").toString());
	                    	lModel.setMapy(item.getString("mapy").toString());
	                    	lModel.setPhoto(item.getString("photo").toString());
	                    	lModel.setPic_home(item.getString("pic_home").toString());
	                    	lModel.setTitle(item.getString("title").toString());
	                    	lModel.setUser_id(item.getString("user_id").toString());
	                    	UrlImageViewHelper.loadUrlDrawable(getActivity(), "http://img.ringpet.com/"+lModel.getPhoto());
	                    	UrlImageViewHelper.loadUrlDrawable(getActivity(), "http://img.ringpet.com/"+lModel.getPic_home());
	                    	lists.add(lModel);
	                    }
	
	                } catch (JSONException e) {
	                    Log.d("jsonexception", e.toString());
	                }

 	           	}catch(Exception e){
 	        		e.printStackTrace();
 	        	}
 	        		
         	   mHandler.post(new Runnable() {
         		  public void run() {
         			 dialog.hide();
         			 dialog.dismiss();
         			 setListView();
         		  }
         	   });
            }
    	}.start();
    }
    
    private void setListView()
    {
    	ListView listView = (ListView)getView().findViewById(R.id.listView1);
        TestAdapter b1_adapter = new TestAdapter(this.getActivity(), R.layout.item_bookmark, lists);
		listView.setAdapter(b1_adapter);
		
		listView.setOnItemClickListener(new OnItemClickListener() {
            public void onItemClick(AdapterView<?> parent, View view, int position, long id)                
            {
            	FragmentManager fm = getActivity().getSupportFragmentManager();
            	int cnt = fm.getBackStackEntryCount();
            	
            	if(cnt == 0)
            	{
            		SitterInformationFragment sif =  new SitterInformationFragment();
            		sif.setModel(lists.get(position));
            		FragmentTransaction ft = getFragmentManager().beginTransaction();
            		ft.replace(R.id.fragment1, sif);
            		ft.setTransition(FragmentTransaction.TRANSIT_NONE);
            		ft.addToBackStack("main");
            		ft.commit();
            	}
            }
        });
    }
    
    
    public class TestAdapter extends ArrayAdapter<ListModel>{
    	public ArrayList<ListModel> items;
    	private Context mcontext;
    	private int count = 0;
    	
    	public TestAdapter(Context context, int textViewResourceId, ArrayList<ListModel> items) {
            super(context, textViewResourceId, items);
            mcontext = context;
    		this.items = items;
    	}
    	
    	@Override
        public View getView(int position, View convertView, ViewGroup parent) {
            View v = convertView;
            if (v == null) {
                LayoutInflater vi = (LayoutInflater)getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                v = vi.inflate(R.layout.item_bookmark, null);
            }
            
            ListModel areaInfo = items.get(position);
            
            if (areaInfo != null) {
            	TextView title1 = (TextView) v.findViewById(R.id.im_bk_name);
                ImageView iv = (ImageView) v.findViewById(R.id.im_bk_pic);                                
                
                TextView review_score = (TextView) v.findViewById(R.id.im_bk_review_score);
                TextView review_cnt = (TextView) v.findViewById(R.id.im_bk_review_cnt);
                TextView money = (TextView) v.findViewById(R.id.im_bk_description);
                title1.setText(areaInfo.getUser_id());
                UrlImageViewHelper.setUrlDrawable(iv, "http://img.ringpet.com/"+areaInfo.getPhoto());                
                
                ImageView badge1 = (ImageView) v.findViewById(R.id.im_bk_ico1);
                ImageView badge2 = (ImageView) v.findViewById(R.id.im_bk_ico2);
                ImageView badge3 = (ImageView) v.findViewById(R.id.im_bk_ico3);
                
                if(areaInfo.getBadge1() == 0)
                	badge1.setVisibility(View.INVISIBLE);
                else
                	badge1.setVisibility(View.VISIBLE);
                
                if(areaInfo.getBadge2() == 0)
                	badge2.setVisibility(View.INVISIBLE);
                else
                	badge2.setVisibility(View.VISIBLE);
                
                if(areaInfo.getBadge3() == 0)
                	badge3.setVisibility(View.INVISIBLE);
                else
                	badge3.setVisibility(View.VISIBLE);                
                
                if(count + 1 >= lists.size())
                {
                	dialog.dismiss();
                	dialog.hide();
                }
                
                review_score.setText(Float.toString(areaInfo.getAvg()));
                review_cnt.setText("("+areaInfo.getAvgCnt()+"명)");
                money.setText(areaInfo.getMoney()+"원/일");
                
                count++;
            }
            return v;
        }
    	
    }
	
}